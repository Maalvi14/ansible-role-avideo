---
- name: side effect

  hosts: all

  become: true

  tasks:

    - name: fix docker hosts file conflicts
      command: sed -e '/^::1/d' /etc/hosts
      args:
        warn: no

    - name: create backup dir
      file:
        state: directory
        path: /backup

    - name: take backup
      command: "/usr/local/bin/avideo-backup"
      register: backup_cmd

    - name: Check backup mode
      command: "ls -l {{ backup_cmd.stdout }} | awk '{print $1}'"
      register: backup_mode
      changed_when: false

    - name: Check if backup is read-only
      fail:
        msg: "Backup is in read-only mode"
      when: backup_mode.stdout[0] == '-r--r--r--'

    - name: Check if backup is read-write
      debug:
        msg: "Backup is in read-write mode"
      when: backup_mode.stdout[0] == '-rw-rw-rw-'

    - name: remove avideo folder
      file:
        path: /var/www/avideo
        state: absent

    - name: remove database
      command: "mysql --execute 'DROP DATABASE avideo; DROP DATABASE avideoencoder'"

    - name: query databases
      command: "mysql --execute \"show databases;\" -sN"
      register: db_remove_query

    - name: gather db metadata
      set_fact:
        db_names: "{{ db_remove_query.stdout }}"

    - name: gather db status
      set_fact:
        db_present_avideo: "{{ db_names is search('avideo') }}"
        db_present_encoder: "{{ db_names is search('avideoencoder') }}"

    - name: ensure db removal
      fail:
        msg: "databases not removed"
      when: db_present_avideo or db_present_encoder

    - name: restore backup
      command: "/usr/local/bin/avideo-restore"

    - name: query databases
      command: "mysql --execute \"show databases;\" -sN"
      register: db_restore_query

    - name: gather db metadata
      set_fact:
        db_names: "{{ db_restore_query.stdout }}"

    - name: gather db status
      set_fact:
        db_absent_avideo: "{{ db_names is not search('avideo') }}"
        db_absent_encoder: "{{ db_names is not search('avideoencoder') }}"

    - name: ensure db restore
      fail:
        msg: "databases not restored"
      when: db_absent_avideo or db_absent_encoder
